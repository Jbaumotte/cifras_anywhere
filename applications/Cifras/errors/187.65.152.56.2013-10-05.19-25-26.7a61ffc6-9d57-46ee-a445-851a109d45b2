(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute 'db'"
p3
sS'layer'
p4
S'/home/jbtte/web2py/applications/Cifras/controllers/appadmin.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n# ##########################################################\n# ## make sure administrator is on localhost\n# ###########################################################\n\nimport os\nimport socket\nimport datetime\nimport copy\nimport gluon.contenttype\nimport gluon.fileutils\n\ntry:\n    import pygraphviz as pgv\nexcept ImportError:\n    pgv = None\n\nresponse.subtitle = \'Database Administration (appadmin)\'\n\n# ## critical --- make a copy of the environment\n\nglobal_env = copy.copy(globals())\nglobal_env[\'datetime\'] = datetime\n\nhttp_host = request.env.http_host.split(\':\')[0]\nremote_addr = request.env.remote_addr\ntry:\n    hosts = (http_host, socket.gethostname(),\n             socket.gethostbyname(http_host),\n             \'::1\', \'127.0.0.1\', \'::ffff:127.0.0.1\')\nexcept:\n    hosts = (http_host, )\n\nif request.env.http_x_forwarded_for or request.is_https:\n    session.secure()\nelif (remote_addr not in hosts) and (remote_addr != "127.0.0.1"):\n    raise HTTP(200, T(\'appadmin is disabled because insecure channel\'))\n\nif request.function in (\'auth_manage\',\'manage\') and \'auth\' in globals():\n    auth.requires_membership(auth.settings.manager_group_role)(lambda: None)()\n    menu = False\nelif (request.application == \'admin\' and not session.authorized) or \\\n        (request.application != \'admin\' and not gluon.fileutils.check_credentials(request)):    \n    redirect(URL(\'admin\', \'default\', \'index\',\n                 vars=dict(send=URL(args=request.args, vars=request.vars))))\nelse:\n    menu = True\n\nignore_rw = True\nresponse.view = \'appadmin.html\'\nif menu:\n    response.menu = [[T(\'design\'), False, URL(\'admin\', \'default\', \'design\',\n                 args=[request.application])], [T(\'db\'), False,\n                 URL(\'index\')], [T(\'state\'), False,\n                 URL(\'state\')], [T(\'cache\'), False,\n                 URL(\'ccache\')]]\n\n# ##########################################################\n# ## auxiliary functions\n# ###########################################################\n\nif False and request.tickets_db:\n    from gluon.restricted import TicketStorage\n    ts = TicketStorage()\n    ts._get_table(request.tickets_db, ts.tablename, request.application)\n\ndef get_databases(request):\n    dbs = {}\n    for (key, value) in global_env.items():\n        cond = False\n        try:\n            cond = isinstance(value, GQLDB)\n        except:\n            cond = isinstance(value, SQLDB)\n        if cond:\n            dbs[key] = value\n    return dbs\n\n\ndatabases = get_databases(None)\n\n\ndef eval_in_global_env(text):\n    exec (\'_ret=%s\' % text, {}, global_env)\n    return global_env[\'_ret\']\n\n\ndef get_database(request):\n    if request.args and request.args[0] in databases:\n        return eval_in_global_env(request.args[0])\n    else:\n        session.flash = T(\'invalid request\')\n        redirect(URL(\'index\'))\n\n\ndef get_table(request):\n    db = get_database(request)\n    if len(request.args) > 1 and request.args[1] in db.tables:\n        return (db, request.args[1])\n    else:\n        session.flash = T(\'invalid request\')\n        redirect(URL(\'index\'))\n\n\ndef get_query(request):\n    try:\n        return eval_in_global_env(request.vars.query)\n    except Exception:\n        return None\n\n\ndef query_by_table_type(tablename, db, request=request):\n    keyed = hasattr(db[tablename], \'_primarykey\')\n    if keyed:\n        firstkey = db[tablename][db[tablename]._primarykey[0]]\n        cond = \'>0\'\n        if firstkey.type in [\'string\', \'text\']:\n            cond = \'!=""\'\n        qry = \'%s.%s.%s%s\' % (\n            request.args[0], request.args[1], firstkey.name, cond)\n    else:\n        qry = \'%s.%s.id>0\' % tuple(request.args[:2])\n    return qry\n\n\n# ##########################################################\n# ## list all databases and tables\n# ###########################################################\ndef index():\n    return dict(databases=databases)\n\n\n# ##########################################################\n# ## insert a new record\n# ###########################################################\n\n\ndef insert():\n    (db, table) = get_table(request)\n    form = SQLFORM(db[table], ignore_rw=ignore_rw)\n    if form.accepts(request.vars, session):\n        response.flash = T(\'new record inserted\')\n    return dict(form=form, table=db[table])\n\n\n# ##########################################################\n# ## list all records in table and insert new record\n# ###########################################################\n\n\ndef download():\n    import os\n    db = get_database(request)\n    return response.download(request, db)\n\n\ndef csv():\n    import gluon.contenttype\n    response.headers[\'Content-Type\'] = \\\n        gluon.contenttype.contenttype(\'.csv\')\n    db = get_database(request)\n    query = get_query(request)\n    if not query:\n        return None\n    response.headers[\'Content-disposition\'] = \'attachment; filename=%s_%s.csv\'\\\n        % tuple(request.vars.query.split(\'.\')[:2])\n    return str(db(query, ignore_common_filters=True).select())\n\n\ndef import_csv(table, file):\n    table.import_from_csv_file(file)\n\n\ndef select():\n    import re\n    db = get_database(request)\n    dbname = request.args[0]\n    regex = re.compile(\'(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>\\d+)\')\n    if len(request.args) > 1 and hasattr(db[request.args[1]], \'_primarykey\'):\n        regex = re.compile(\'(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>.+)\')\n    if request.vars.query:\n        match = regex.match(request.vars.query)\n        if match:\n            request.vars.query = \'%s.%s.%s==%s\' % (request.args[0],\n                                                   match.group(\'table\'), match.group(\'field\'),\n                                                   match.group(\'value\'))\n    else:\n        request.vars.query = session.last_query\n    query = get_query(request)\n    if request.vars.start:\n        start = int(request.vars.start)\n    else:\n        start = 0\n    nrows = 0\n    stop = start + 100\n    table = None\n    rows = []\n    orderby = request.vars.orderby\n    if orderby:\n        orderby = dbname + \'.\' + orderby\n        if orderby == session.last_orderby:\n            if orderby[0] == \'~\':\n                orderby = orderby[1:]\n            else:\n                orderby = \'~\' + orderby\n    session.last_orderby = orderby\n    session.last_query = request.vars.query\n    form = FORM(TABLE(TR(T(\'Query:\'), \'\', INPUT(_style=\'width:400px\',\n                _name=\'query\', _value=request.vars.query or \'\',\n                requires=IS_NOT_EMPTY(\n                    error_message=T("Cannot be empty")))), TR(T(\'Update:\'),\n                INPUT(_name=\'update_check\', _type=\'checkbox\',\n                value=False), INPUT(_style=\'width:400px\',\n                _name=\'update_fields\', _value=request.vars.update_fields\n                                    or \'\')), TR(T(\'Delete:\'), INPUT(_name=\'delete_check\',\n                _class=\'delete\', _type=\'checkbox\', value=False), \'\'),\n                TR(\'\', \'\', INPUT(_type=\'submit\', _value=T(\'submit\')))),\n                _action=URL(r=request, args=request.args))\n\n    tb = None\n    if form.accepts(request.vars, formname=None):\n        regex = re.compile(request.args[0] + \'\\.(?P<table>\\w+)\\..+\')\n        match = regex.match(form.vars.query.strip())\n        if match:\n            table = match.group(\'table\')\n        try:\n            nrows = db(query).count()\n            if form.vars.update_check and form.vars.update_fields:\n                db(query).update(**eval_in_global_env(\'dict(%s)\'\n                                                      % form.vars.update_fields))\n                response.flash = T(\'%s %%{row} updated\', nrows)\n            elif form.vars.delete_check:\n                db(query).delete()\n                response.flash = T(\'%s %%{row} deleted\', nrows)\n            nrows = db(query).count()\n            if orderby:\n                rows = db(query, ignore_common_filters=True).select(limitby=(\n                    start, stop), orderby=eval_in_global_env(orderby))\n            else:\n                rows = db(query, ignore_common_filters=True).select(\n                    limitby=(start, stop))\n        except Exception, e:\n            import traceback\n            tb = traceback.format_exc()\n            (rows, nrows) = ([], 0)\n            response.flash = DIV(T(\'Invalid Query\'), PRE(str(e)))\n    # begin handle upload csv\n    csv_table = table or request.vars.table\n    if csv_table:\n        formcsv = FORM(str(T(\'or import from csv file\')) + " ",\n                       INPUT(_type=\'file\', _name=\'csvfile\'),\n                       INPUT(_type=\'hidden\', _value=csv_table, _name=\'table\'),\n                       INPUT(_type=\'submit\', _value=T(\'import\')))\n    else:\n        formcsv = None\n    if formcsv and formcsv.process().accepted:\n        try:\n            import_csv(db[request.vars.table],\n                       request.vars.csvfile.file)\n            response.flash = T(\'data uploaded\')\n        except Exception, e:\n            response.flash = DIV(T(\'unable to parse csv file\'), PRE(str(e)))\n    # end handle upload csv\n\n    return dict(\n        form=form,\n        table=table,\n        start=start,\n        stop=stop,\n        nrows=nrows,\n        rows=rows,\n        query=request.vars.query,\n        formcsv=formcsv,\n        tb=tb,\n    )\n\n\n# ##########################################################\n# ## edit delete one record\n# ###########################################################\n\n\ndef update():\n    (db, table) = get_table(request)\n    keyed = hasattr(db[table], \'_primarykey\')\n    record = None\n    db[table]._common_filter = None\n    if keyed:\n        key = [f for f in request.vars if f in db[table]._primarykey]\n        if key:\n            record = db(db[table][key[0]] == request.vars[key[\n                        0]]).select().first()\n    else:\n        record = db(db[table].id == request.args(\n            2)).select().first()\n\n    if not record:\n        qry = query_by_table_type(table, db)\n        session.flash = T(\'record does not exist\')\n        redirect(URL(\'select\', args=request.args[:1],\n                     vars=dict(query=qry)))\n\n    if keyed:\n        for k in db[table]._primarykey:\n            db[table][k].writable = False\n\n    form = SQLFORM(\n        db[table], record, deletable=True, delete_label=T(\'Check to delete\'),\n        ignore_rw=ignore_rw and not keyed,\n        linkto=URL(\'select\',\n                   args=request.args[:1]), upload=URL(r=request,\n                                                      f=\'download\', args=request.args[:1]))\n\n    if form.accepts(request.vars, session):\n        session.flash = T(\'done!\')\n        qry = query_by_table_type(table, db)\n        redirect(URL(\'select\', args=request.args[:1],\n                 vars=dict(query=qry)))\n    return dict(form=form, table=db[table])\n\n\n# ##########################################################\n# ## get global variables\n# ###########################################################\n\n\ndef state():\n    return dict()\n\n\ndef ccache():\n    cache.ram.initialize()\n    cache.disk.initialize()\n\n    form = FORM(\n        P(TAG.BUTTON(\n            T("Clear CACHE?"), _type="submit", _name="yes", _value="yes")),\n        P(TAG.BUTTON(\n            T("Clear RAM"), _type="submit", _name="ram", _value="ram")),\n        P(TAG.BUTTON(\n            T("Clear DISK"), _type="submit", _name="disk", _value="disk")),\n    )\n\n    if form.accepts(request.vars, session):\n        clear_ram = False\n        clear_disk = False\n        session.flash = ""\n        if request.vars.yes:\n            clear_ram = clear_disk = True\n        if request.vars.ram:\n            clear_ram = True\n        if request.vars.disk:\n            clear_disk = True\n\n        if clear_ram:\n            cache.ram.clear()\n            session.flash += T("Ram Cleared")\n        if clear_disk:\n            cache.disk.clear()\n            session.flash += T("Disk Cleared")\n\n        redirect(URL(r=request))\n\n    try:\n        from guppy import hpy\n        hp = hpy()\n    except ImportError:\n        hp = False\n\n    import shelve\n    import os\n    import copy\n    import time\n    import math\n    from gluon import portalocker\n\n    ram = {\n        \'entries\': 0,\n        \'bytes\': 0,\n        \'objects\': 0,\n        \'hits\': 0,\n        \'misses\': 0,\n        \'ratio\': 0,\n        \'oldest\': time.time(),\n        \'keys\': []\n    }\n    disk = copy.copy(ram)\n    total = copy.copy(ram)\n    disk[\'keys\'] = []\n    total[\'keys\'] = []\n\n    def GetInHMS(seconds):\n        hours = math.floor(seconds / 3600)\n        seconds -= hours * 3600\n        minutes = math.floor(seconds / 60)\n        seconds -= minutes * 60\n        seconds = math.floor(seconds)\n\n        return (hours, minutes, seconds)\n\n    for key, value in cache.ram.storage.iteritems():\n        if isinstance(value, dict):\n            ram[\'hits\'] = value[\'hit_total\'] - value[\'misses\']\n            ram[\'misses\'] = value[\'misses\']\n            try:\n                ram[\'ratio\'] = ram[\'hits\'] * 100 / value[\'hit_total\']\n            except (KeyError, ZeroDivisionError):\n                ram[\'ratio\'] = 0\n        else:\n            if hp:\n                ram[\'bytes\'] += hp.iso(value[1]).size\n                ram[\'objects\'] += hp.iso(value[1]).count\n            ram[\'entries\'] += 1\n            if value[0] < ram[\'oldest\']:\n                ram[\'oldest\'] = value[0]\n            ram[\'keys\'].append((key, GetInHMS(time.time() - value[0])))\n    folder = os.path.join(request.folder,\'cache\')\n    if not os.path.exists(folder):\n        os.mkdir(folder)\n    locker = open(os.path.join(folder, \'cache.lock\'), \'a\')\n    portalocker.lock(locker, portalocker.LOCK_EX)\n    disk_storage = shelve.open(\n        os.path.join(folder, \'cache.shelve\'))\n    try:\n        for key, value in disk_storage.items():\n            if isinstance(value, dict):\n                disk[\'hits\'] = value[\'hit_total\'] - value[\'misses\']\n                disk[\'misses\'] = value[\'misses\']\n                try:\n                    disk[\'ratio\'] = disk[\'hits\'] * 100 / value[\'hit_total\']\n                except (KeyError, ZeroDivisionError):\n                    disk[\'ratio\'] = 0\n            else:\n                if hp:\n                    disk[\'bytes\'] += hp.iso(value[1]).size\n                    disk[\'objects\'] += hp.iso(value[1]).count\n                disk[\'entries\'] += 1\n                if value[0] < disk[\'oldest\']:\n                    disk[\'oldest\'] = value[0]\n                disk[\'keys\'].append((key, GetInHMS(time.time() - value[0])))\n\n    finally:\n        portalocker.unlock(locker)\n        locker.close()\n        disk_storage.close()\n\n    total[\'entries\'] = ram[\'entries\'] + disk[\'entries\']\n    total[\'bytes\'] = ram[\'bytes\'] + disk[\'bytes\']\n    total[\'objects\'] = ram[\'objects\'] + disk[\'objects\']\n    total[\'hits\'] = ram[\'hits\'] + disk[\'hits\']\n    total[\'misses\'] = ram[\'misses\'] + disk[\'misses\']\n    total[\'keys\'] = ram[\'keys\'] + disk[\'keys\']\n    try:\n        total[\'ratio\'] = total[\'hits\'] * 100 / (total[\'hits\'] +\n                                                total[\'misses\'])\n    except (KeyError, ZeroDivisionError):\n        total[\'ratio\'] = 0\n\n    if disk[\'oldest\'] < ram[\'oldest\']:\n        total[\'oldest\'] = disk[\'oldest\']\n    else:\n        total[\'oldest\'] = ram[\'oldest\']\n\n    ram[\'oldest\'] = GetInHMS(time.time() - ram[\'oldest\'])\n    disk[\'oldest\'] = GetInHMS(time.time() - disk[\'oldest\'])\n    total[\'oldest\'] = GetInHMS(time.time() - total[\'oldest\'])\n\n    def key_table(keys):\n        return TABLE(\n            TR(TD(B(T(\'Key\'))), TD(B(T(\'Time in Cache (h:m:s)\')))),\n            *[TR(TD(k[0]), TD(\'%02d:%02d:%02d\' % k[1])) for k in keys],\n            **dict(_class=\'cache-keys\',\n                   _style="border-collapse: separate; border-spacing: .5em;"))\n\n    ram[\'keys\'] = key_table(ram[\'keys\'])\n    disk[\'keys\'] = key_table(disk[\'keys\'])\n    total[\'keys\'] = key_table(total[\'keys\'])\n\n    return dict(form=form, total=total,\n                ram=ram, disk=disk, object_stats=hp != False)\n\n\ndef table_template(table):\n    from gluon.html import TR, TD, TABLE, TAG\n\n    def FONT(*args, **kwargs):\n        return TAG.font(*args, **kwargs)\n\n    def types(field):\n        f_type = field.type\n        if not isinstance(f_type,str):\n            return \' \'\n        elif f_type == \'string\':\n            return field.length\n        elif f_type == \'id\':\n            return B(\'pk\')\n        elif f_type.startswith(\'reference\') or \\\n                f_type.startswith(\'list:reference\'):\n            return B(\'fk\')\n        else:\n            return \' \'\n\n    # This is horribe HTML but the only one graphiz understands\n    rows = []\n    cellpadding = 4\n    color = "#000000"\n    bgcolor = "#FFFFFF"\n    face = "Helvetica"\n    face_bold = "Helvetica Bold"\n    border = 0\n\n    rows.append(TR(TD(FONT(table, _face=face_bold, _color=bgcolor),\n                           _colspan=3, _cellpadding=cellpadding,\n                           _align="center", _bgcolor=color)))\n    for row in db[table]:\n        rows.append(TR(TD(FONT(row.name, _color=color, _face=face_bold),\n                              _align="left", _cellpadding=cellpadding,\n                              _border=border),\n                       TD(FONT(row.type, _color=color, _face=face),\n                               _align="left", _cellpadding=cellpadding,\n                               _border=border),\n                       TD(FONT(types(row), _color=color, _face=face),\n                               _align="center", _cellpadding=cellpadding,\n                               _border=border)))\n    return "< %s >" % TABLE(*rows, **dict(_bgcolor=bgcolor, _border=1,\n                                          _cellborder=0, _cellspacing=0)\n                             ).xml()\n\n\ndef bg_graph_model():\n    graph = pgv.AGraph(layout=\'dot\',  directed=True,  strict=False,  rankdir=\'LR\')\n    \n    subgraphs = dict()    \n    for tablename in db.tables:\n        if hasattr(db[tablename],\'_meta_graphmodel\'):\n            meta_graphmodel = db[tablename]._meta_graphmodel\n        else:\n            meta_graphmodel = dict(group=\'Undefined\', color=\'#ECECEC\')\n        \n        group = meta_graphmodel[\'group\'].replace(\' \', \'\') \n        if not subgraphs.has_key(group):\n            subgraphs[group] = dict(meta=meta_graphmodel, tables=[])\n            subgraphs[group][\'tables\'].append(tablename)\n        else:\n            subgraphs[group][\'tables\'].append(tablename)        \n      \n        graph.add_node(tablename, name=tablename, shape=\'plaintext\',\n                       label=table_template(tablename))\n    \n    for n, key in enumerate(subgraphs.iterkeys()):        \n        graph.subgraph(nbunch=subgraphs[key][\'tables\'],\n                    name=\'cluster%d\' % n,\n                    style=\'filled\',\n                    color=subgraphs[key][\'meta\'][\'color\'],\n                    label=subgraphs[key][\'meta\'][\'group\'])   \n\n    for tablename in db.tables:\n        for field in db[tablename]:\n            f_type = field.type\n            if isinstance(f_type,str) and (\n                f_type.startswith(\'reference\') or\n                f_type.startswith(\'list:reference\')):\n                referenced_table = f_type.split()[1].split(\'.\')[0]\n                n1 = graph.get_node(tablename)\n                n2 = graph.get_node(referenced_table)\n                graph.add_edge(n1, n2, color="#4C4C4C", label=\'\')\n\n    graph.layout()\n    #return graph.draw(format=\'png\', prog=\'dot\')\n    if not request.args:\n        return graph.draw(format=\'png\', prog=\'dot\')\n    else:       \n        response.headers[\'Content-Disposition\']=\'attachment;filename=graph.%s\'%request.args(0)\n        if request.args(0) == \'dot\':        \n            return graph.string()\n        else:\n            return graph.draw(format=request.args(0), prog=\'dot\')\n\ndef graph_model():    \n    return dict(databases=databases, pgv=pgv)\n\ndef auth_manage():\n    tablename = request.args(0)\n    if not tablename or not tablename in auth.db.tables:\n        return dict()\n    table = auth.db[tablename]\n    formname = \'%s_grid\' % tablename\n    if tablename == auth.settings.table_user_name:\n        auth.settings.table_user._plural = T(\'Users\')\n        auth.settings.table_membership._plural = T(\'Roles\')\n        auth.settings.table_membership._id.readable = False\n        auth.settings.table_membership.user_id.label = T(\'User\')\n        auth.settings.table_membership.group_id.label = T(\'Role\')\n        grid = SQLFORM.smartgrid(table, args=request.args[:1], user_signature=True,\n                                 linked_tables=[auth.settings.table_membership_name],\n                                 maxtextlength=1000, formname=formname)\n    else:\n        table._id.readable = False\n        auth.settings.table_permission.group_id.label = T(\'Role\')\n        auth.settings.table_permission.name.label = T(\'Permission\')\n        orderby = \'role\' if table == auth.settings.table_group_name else \'group_id\'\n        grid = SQLFORM.grid(table, args=request.args[:1], orderby=table[orderby],\n                            user_signature=True, maxtextlength=1000, formname=formname)    \n    return grid if request.extension==\'load\' else dict(grid=grid)\n\ndef manage():\n    tablename = request.args(0)\n    if tablename in auth.db.tables:\n        grid = SQLFORM.smartgrid(auth.db[tablename], args=request.args[:1])\n    else:\n        return dict()\n    return grid if request.extension==\'load\' else dict(grid=grid)\n\nresponse._vars=response._caller(update)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'args'
p24
S'("\'Table\' object has no attribute \'db\'",)'
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.AttributeError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.AttributeError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'Table' object has no attribute 'db'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S'sWa\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">ajax</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">application</td><td valign="top">:</td><td><div>Cifras</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">args</td><td valign="top">:</td><td><div><table><tr><td><div>db</div></td></tr><tr><td><div>music</div></td></tr><tr><td><div>3</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;fdopen&gt;&#x27;, mode &#x27;w+b&#x27; at 0x2a598a0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cid</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">client</td><td valign="top">:</td><td><div>187.65.152.56</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">controller</td><td valign="top">:</td><td><div>appadmin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_admin</td><td valign="top">:</td><td><div>187.65.152.56-333a941d-c712-443d-a84e-ebfb3e226b9d<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_cifras</td><td valign="top">:</td><td><div>187.65.152.56-5f96ed88-9070-4f5b-b37a-89920c0058d6<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_welcome</td><td valign="top">:</td><td><div>187.65.152.56-c6c3a000-1fd3-4c28-82bf-ddb55c6ad3b2<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">sessionid</td><td valign="top">:</td><td><div>a598216d88c243a67add4050c568c069<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">env</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/jbtte/web2py/applications/Cifras/&#x27;, &#x27;/home/jbtte/web2py/applications/admin/&#x27;, &#x27;/home/jbtte/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/jbtte/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">content_length</td><td valign="top">:</td><td><div>1132</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">content_type</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary1BPjzA6QlKgJQKN6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">document_root</td><td valign="top">:</td><td><div>/usr/share/nginx/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/jbtte/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_encoding</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_language</td><td valign="top">:</td><td><div>pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_connection</td><td valign="top">:</td><td><div>close</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_content_length</td><td valign="top">:</td><td><div>1132</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_content_type</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary1BPjzA6QlKgJQKN6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_cookie</td><td valign="top">:</td><td><div>sessionid=a598216d88c243a67add4050c568c069; __utma=133430031.682321608.1379258277.1380923632.1380998005.13; __utmb=133430031.60.10.1380998005; __utmc=133430031; __utmz=133430031.1380998005.13.6.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided); session_id_welcome=187.65.152.56-c6c3a000-1fd3-4c28-82bf-ddb55c6ad3b2; session_id_admin=187.65.152.56-333a941d-c712-443d-a84e-ebfb3e226b9d; session_id_cifras=187.65.152.56-5f96ed88-9070-4f5b-b37a-89920c0058d6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_host</td><td valign="top">:</td><td><div>jbtte.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_origin</td><td valign="top">:</td><td><div>https://jbtte.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_referer</td><td valign="top">:</td><td><div>https://jbtte.pythonanywhere.com/Cifras/appadmin/update/db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_user_agent</td><td valign="top">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.69 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_x_forwarded_for</td><td valign="top">:</td><td><div>187.65.152.56</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_x_real_ip</td><td valign="top">:</td><td><div>187.65.152.56</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">https</td><td valign="top">:</td><td><div>on</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>hansel-liveweb1</div></td></tr><tr><td><div>jbtte.pythonanywhere.com</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>50.19.109.98</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>localhost</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path_info</td><td valign="top">:</td><td><div>/Cifras/appadmin/update/db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">query_string</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_addr</td><td valign="top">:</td><td><div>10.90.182.149</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_port</td><td valign="top">:</td><td><div>59835</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_method</td><td valign="top">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_uri</td><td valign="top">:</td><td><div>/Cifras/appadmin/update/db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">script_name</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_name</td><td valign="top">:</td><td><div>jbtte.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_port</td><td valign="top">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_protocol</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uwsgi_node</td><td valign="top">:</td><td><div>hansel-liveweb1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uwsgi_version</td><td valign="top">:</td><td><div>1.9.12</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_path</td><td valign="top">:</td><td><div>/home/jbtte/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div>2.5.1-stable+timestamp.2013.06.06.15.39.19</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_errors</td><td valign="top">:</td><td><div>&lt;uwsgi_file__bin_user_wsgi_wrapper.ErrorLogWrapper object at 0x34fa590&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_file_wrapper</td><td valign="top">:</td><td><div>&lt;built-in function uwsgi_sendfile&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_input</td><td valign="top">:</td><td><div>&lt;uwsgi._Input object at 0x7fb68fc8f9c0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multiprocess</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multithread</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_url_scheme</td><td valign="top">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_version</td><td valign="top">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">extension</td><td valign="top">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">folder</td><td valign="top">:</td><td><div>/home/jbtte/web2py/applications/Cifras/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">function</td><td valign="top">:</td><td><div>update</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">get_vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">global_settings</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/jbtte/web2py/applications/Cifras/&#x27;, &#x27;/home/jbtte/web2py/applications/admin/&#x27;, &#x27;/home/jbtte/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/jbtte/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/jbtte/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>hansel-liveweb1</div></td></tr><tr><td><div>jbtte.pythonanywhere.com</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>50.19.109.98</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>localhost</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div>2.5.1-stable+timestamp.2013.06.06.15.39.19</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_https</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_local</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_restful</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">now</td><td valign="top">:</td><td><div>datetime.datetime(2013, 10, 5, 19, 25, 26, 310307)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">post_vars</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">banda</td><td valign="top">:</td><td><div> Banda Eva</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">created_on</td><td valign="top">:</td><td><div>05-10-2013 19:23:29</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">delete_this_record</td><td valign="top">:</td><td><div>on</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">editado</td><td valign="top">:</td><td><div>false</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">id</td><td valign="top">:</td><td><div>3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">musica</td><td valign="top">:</td><td><div> Duas Medidas </div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>http://www.cifraclub.com.br/banda-eva/duas-medidas/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_args</td><td valign="top">:</td><td><div>db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_extension</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>/Cifras/appadmin/update/db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">utcnow</td><td valign="top">:</td><td><div>datetime.datetime(2013, 10, 5, 19, 25, 26, 310330)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uuid</td><td valign="top">:</td><td><div>Cifras/187.65.152.56.2013-10-05.19-25-26.7a61ffc6-9d57-46ee-a445-851a109d45b2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">vars</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">banda</td><td valign="top">:</td><td><div> Banda Eva</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">created_on</td><td valign="top">:</td><td><div>05-10-2013 19:23:29</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">delete_this_record</td><td valign="top">:</td><td><div>on</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">editado</td><td valign="top">:</td><td><div>false</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">id</td><td valign="top">:</td><td><div>3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">musica</td><td valign="top">:</td><td><div> Duas Medidas </div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>http://www.cifraclub.com.br/banda-eva/duas-medidas/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">environ</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">CONTENT_LENGTH</td><td valign="top">:</td><td><div>1132</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">CONTENT_TYPE</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary1BPjzA6QlKgJQKN6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">DOCUMENT_ROOT</td><td valign="top">:</td><td><div>/usr/share/nginx/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTPS</td><td valign="top">:</td><td><div>on</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_ENCODING</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_LANGUAGE</td><td valign="top">:</td><td><div>pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONNECTION</td><td valign="top">:</td><td><div>close</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONTENT_LENGTH</td><td valign="top">:</td><td><div>1132</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONTENT_TYPE</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary1BPjzA6QlKgJQKN6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_COOKIE</td><td valign="top">:</td><td><div>sessionid=a598216d88c243a67add4050c568c069; __utma=133430031.682321608.1379258277.1380923632.1380998005.13; __utmb=133430031.60.10.1380998005; __utmc=133430031; __utmz=133430031.1380998005.13.6.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided); session_id_welcome=187.65.152.56-c6c3a000-1fd3-4c28-82bf-ddb55c6ad3b2; session_id_admin=187.65.152.56-333a941d-c712-443d-a84e-ebfb3e226b9d; session_id_cifras=187.65.152.56-5f96ed88-9070-4f5b-b37a-89920c0058d6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_HOST</td><td valign="top">:</td><td><div>jbtte.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ORIGIN</td><td valign="top">:</td><td><div>https://jbtte.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_REFERER</td><td valign="top">:</td><td><div>https://jbtte.pythonanywhere.com/Cifras/appadmin/update/db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_USER_AGENT</td><td valign="top">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.69 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_X_FORWARDED_FOR</td><td valign="top">:</td><td><div>187.65.152.56</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_X_REAL_IP</td><td valign="top">:</td><td><div>187.65.152.56</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">PATH_INFO</td><td valign="top">:</td><td><div>/Cifras/appadmin/update/db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">QUERY_STRING</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_ADDR</td><td valign="top">:</td><td><div>10.90.182.149</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_PORT</td><td valign="top">:</td><td><div>59835</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_METHOD</td><td valign="top">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_URI</td><td valign="top">:</td><td><div>/Cifras/appadmin/update/db/music/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SCRIPT_NAME</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_NAME</td><td valign="top">:</td><td><div>jbtte.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PORT</td><td valign="top">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PROTOCOL</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uwsgi.node</td><td valign="top">:</td><td><div>hansel-liveweb1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uwsgi.version</td><td valign="top">:</td><td><div>1.9.12</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.errors</td><td valign="top">:</td><td><div>&lt;uwsgi_file__bin_user_wsgi_wrapper.ErrorLogWrapper object at 0x34fa590&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.file_wrapper</td><td valign="top">:</td><td><div>&lt;built-in function uwsgi_sendfile&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.input</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;fdopen&gt;&#x27;, mode &#x27;w+b&#x27; at 0x2a598a0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multiprocess</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multithread</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.url_scheme</td><td valign="top">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.version</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr></table></div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/home/jbtte/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x4766bb0, file "/home/...ications/Cifras/controllers/appadmin.py", line 7>'
p69
ssS'lnum'
p70
I212
sS'lines'
p71
(dp72
I207
S'    try:'
p73
sI208
S'        if isinstance(code, types.CodeType):'
p74
sI209
S'            ccode = code'
p75
sI210
S'        else:'
p76
sI211
S'            ccode = compile2(code, layer)'
p77
sI212
S'        exec ccode in environment'
p78
sI213
S'    except HTTP:'
p79
sI214
S'        raise'
p80
sI215
S'    except RestrictedError:'
p81
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p82
ssS'call'
p83
S"(code='# -*- coding: utf-8 -*-\\n\\n# #####################...d=grid)\\n\\nresponse._vars=response._caller(update)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/home/jbtte/web2py/applications/Cifras/controllers/appadmin.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/home/jbtte/web2py/applications/Cifras/controllers/appadmin.py'
p88
sg64
(dp89
sg70
I615
sg71
(dp90
I608
S'    tablename = request.args(0)'
p91
sI609
S'    if tablename in auth.db.tables:'
p92
sI610
S'        grid = SQLFORM.smartgrid(auth.db[tablename], args=request.args[:1])'
p93
sI611
S'    else:'
p94
sI612
S'        return dict()'
p95
sI613
S"    return grid if request.extension=='load' else dict(grid=grid)"
p96
sI604
S'                            user_signature=True, maxtextlength=1000, formname=formname)'
p97
sI605
S"    return grid if request.extension=='load' else dict(grid=grid)"
p98
sI606
S''
sI607
S'def manage():'
p99
ssg83
S'()'
p100
sg85
S'<module>'
p101
sa(dp102
g62
S'/home/jbtte/web2py/gluon/globals.py'
p103
sg64
(dp104
S'self'
p105
S'undefined'
p106
sS'f'
S'<function update>'
p107
ssg70
I194
sg71
(dp108
I192
S"        self.delimiters = ('{{', '}}')"
p109
sI193
S'        self._vars = None'
p110
sI194
S'        self._caller = lambda f: f()'
p111
sI195
S'        self._view_environment = None'
p112
sI196
S'        self._custom_commit = None'
p113
sI197
S'        self._custom_rollback = None'
p114
sI198
S''
sI189
S'        self.menu = []             # used by the default view layout'
p115
sI190
S'        self.files = []            # used by web2py_ajax.html'
p116
sI191
S'        self.generic_patterns = []  # patterns to allow generic views'
p117
ssg83
S'(f=<function update>)'
p118
sg85
S'<lambda>'
p119
sa(dp120
g62
S'/home/jbtte/web2py/applications/Cifras/controllers/appadmin.py'
p121
sg64
(dp122
S'global request'
p123
S"<Storage {'function': 'update', 'body': <open fi...'banda': ' Banda Eva', '_formname': 'music/3'}>}>"
p124
sS'request.vars'
p125
S"<Storage {'url': 'http://www.cifraclub.com.br/ba..., 'banda': ' Banda Eva', '_formname': 'music/3'}>"
p126
sS'global session'
p127
S"<Storage {'letra': 'Tom: D\\r\\n\\t\\t\\nA9          ...ssion_hash': '406cda70e2626021675159dd2f048bd1'}>"
p128
sS'form'
p129
S'<gluon.sqlhtml.SQLFORM object>'
p130
sS'form.accepts'
p131
S'<bound method SQLFORM.accepts of <gluon.sqlhtml.SQLFORM object>>'
p132
ssg70
I315
sg71
(dp133
I310
S'        ignore_rw=ignore_rw and not keyed,'
p134
sI311
S"        linkto=URL('select',"
p135
sI312
S'                   args=request.args[:1]), upload=URL(r=request,'
p136
sI313
S"                                                      f='download', args=request.args[:1]))"
p137
sI314
S''
sI315
S'    if form.accepts(request.vars, session):'
p138
sI316
S"        session.flash = T('done!')"
p139
sI317
S'        qry = query_by_table_type(table, db)'
p140
sI318
S"        redirect(URL('select', args=request.args[:1],"
p141
sI319
S'                 vars=dict(query=qry)))'
p142
ssg83
S'()'
p143
sg85
S'update'
p144
sa(dp145
g62
S'/home/jbtte/web2py/gluon/sqlhtml.py'
p146
sg64
(dp147
S'kwargs'
p148
g45
ssg70
I1370
sg71
(dp149
I1365
S'            session,'
p150
sI1366
S'            formname,'
p151
sI1367
S'            keepvalues,'
p152
sI1368
S'            onvalidation,'
p153
sI1369
S'            hideerror=hideerror,'
p154
sI1370
S'            **kwargs'
p155
sI1371
S'        )'
p156
sI1372
S''
sI1373
S'        self.deleted = \\'
p157
sI1374
S'            request_vars.get(self.FIELDNAME_REQUEST_DELETE, False)'
p158
ssg83
S"(self=<gluon.sqlhtml.SQLFORM object>, request_vars=<Storage {'url': 'http://www.cifraclub.com.br/ba..., 'banda': ' Banda Eva', '_formname': 'music/3'}>, session=<Storage {'letra': 'Tom: D\\r\\n\\t\\t\\nA9          ...ssion_hash': '406cda70e2626021675159dd2f048bd1'}>, formname='music/3', keepvalues=True, onvalidation=None, dbio=True, hideerror=False, detect_record_change=False, **kwargs={})"
p159
sg85
S'accepts'
p160
sa(dp161
g62
S'/home/jbtte/web2py/gluon/html.py'
p162
sg64
(dp163
S'status'
p164
S'True'
p165
sS'self'
p166
S'<gluon.sqlhtml.SQLFORM object>'
p167
sS'self._traverse'
p168
S'<bound method SQLFORM._traverse of <gluon.sqlhtml.SQLFORM object>>'
p169
sS'hideerror'
p170
S'False'
p171
ssg70
I2010
sg71
(dp172
I2005
S'        if status and session:'
p173
sI2006
S'            # check if editing a record that has been modified by the server'
p174
sI2007
S"            if hasattr(self, 'record_hash') and self.record_hash != formkey:"
p175
sI2008
S'                status = False'
p176
sI2009
S'                self.record_changed = changed = True'
p177
sI2010
S'        status = self._traverse(status, hideerror)'
p178
sI2011
S'        status = self.assert_status(status, request_vars)'
p179
sI2012
S'        if onvalidation:'
p180
sI2013
S'            if isinstance(onvalidation, dict):'
p181
sI2014
S"                onsuccess = onvalidation.get('onsuccess', None)"
p182
ssg83
S"(self=<gluon.sqlhtml.SQLFORM object>, request_vars=<Storage {'url': 'http://www.cifraclub.com.br/ba...a09a6a35f49e', 'banda': ' Banda Eva', 'id': '3'}>, session=<Storage {'letra': 'Tom: D\\r\\n\\t\\t\\nA9          ...ssion_hash': '406cda70e2626021675159dd2f048bd1'}>, formname='music/3', keepvalues=True, onvalidation=None, hideerror=False, **kwargs={})"
p183
sg85
g160
sa(dp184
g62
S'/home/jbtte/web2py/gluon/html.py'
p185
sg64
(dp186
S'status'
p187
g165
sS'newstatus'
p188
g165
sS'c'
S'<gluon.html.TABLE object>'
p189
sS'hideerror'
p190
g171
sS'c._traverse'
p191
S'<bound method TABLE._traverse of <gluon.html.TABLE object>>'
p192
ssg70
I846
sg71
(dp193
I841
S'                c.latest = self.latest'
p194
sI842
S'                c.session = self.session'
p195
sI843
S'                c.formname = self.formname'
p196
sI844
S"                c['hideerror'] = hideerror or \\"
p197
sI845
S"                        self.attributes.get('hideerror', False)"
p198
sI846
S'                newstatus = c._traverse(status, hideerror) and newstatus'
p199
sI847
S''
sI848
S'        # for input, textarea, select, option'
p200
sI849
S"        # deal with 'value' and 'validation'"
p201
sI850
S''
ssg83
S'(self=<gluon.sqlhtml.SQLFORM object>, status=True, hideerror=False)'
p202
sg85
S'_traverse'
p203
sa(dp204
g62
S'/home/jbtte/web2py/gluon/html.py'
p205
sg64
(dp206
S'status'
p207
g165
sS'newstatus'
p208
g165
sS'c'
S'<gluon.html.TR object>'
p209
sS'hideerror'
p210
g171
sS'c._traverse'
p211
S'<bound method TR._traverse of <gluon.html.TR object>>'
p212
ssg70
I846
sg71
(dp213
I841
S'                c.latest = self.latest'
p214
sI842
S'                c.session = self.session'
p215
sI843
S'                c.formname = self.formname'
p216
sI844
S"                c['hideerror'] = hideerror or \\"
p217
sI845
S"                        self.attributes.get('hideerror', False)"
p218
sI846
S'                newstatus = c._traverse(status, hideerror) and newstatus'
p219
sI847
S''
sI848
S'        # for input, textarea, select, option'
p220
sI849
S"        # deal with 'value' and 'validation'"
p221
sI850
S''
ssg83
S'(self=<gluon.html.TABLE object>, status=True, hideerror=False)'
p222
sg85
g203
sa(dp223
g62
S'/home/jbtte/web2py/gluon/html.py'
p224
sg64
(dp225
S'status'
p226
g165
sS'newstatus'
p227
g165
sS'c'
S'<gluon.html.TD object>'
p228
sS'hideerror'
p229
g171
sS'c._traverse'
p230
S'<bound method TD._traverse of <gluon.html.TD object>>'
p231
ssg70
I846
sg71
(dp232
I841
S'                c.latest = self.latest'
p233
sI842
S'                c.session = self.session'
p234
sI843
S'                c.formname = self.formname'
p235
sI844
S"                c['hideerror'] = hideerror or \\"
p236
sI845
S"                        self.attributes.get('hideerror', False)"
p237
sI846
S'                newstatus = c._traverse(status, hideerror) and newstatus'
p238
sI847
S''
sI848
S'        # for input, textarea, select, option'
p239
sI849
S"        # deal with 'value' and 'validation'"
p240
sI850
S''
ssg83
S'(self=<gluon.html.TR object>, status=True, hideerror=False)'
p241
sg85
g203
sa(dp242
g62
S'/home/jbtte/web2py/gluon/html.py'
p243
sg64
(dp244
S'status'
p245
g165
sS'newstatus'
p246
g165
sS'c'
S'<gluon.html.INPUT object>'
p247
sS'hideerror'
p248
g171
sS'c._traverse'
p249
S'<bound method INPUT._traverse of <gluon.html.INPUT object>>'
p250
ssg70
I846
sg71
(dp251
I841
S'                c.latest = self.latest'
p252
sI842
S'                c.session = self.session'
p253
sI843
S'                c.formname = self.formname'
p254
sI844
S"                c['hideerror'] = hideerror or \\"
p255
sI845
S"                        self.attributes.get('hideerror', False)"
p256
sI846
S'                newstatus = c._traverse(status, hideerror) and newstatus'
p257
sI847
S''
sI848
S'        # for input, textarea, select, option'
p258
sI849
S"        # deal with 'value' and 'validation'"
p259
sI850
S''
ssg83
S'(self=<gluon.html.TD object>, status=True, hideerror=False)'
p260
sg85
g203
sa(dp261
g62
S'/home/jbtte/web2py/gluon/html.py'
p262
sg64
(dp263
S'newstatus'
p264
g165
sS'self'
p265
S'<gluon.html.INPUT object>'
p266
sS'self._validate'
p267
S'<bound method INPUT._validate of <gluon.html.INPUT object>>'
p268
ssg70
I853
sg71
(dp269
I848
S'        # for input, textarea, select, option'
p270
sI849
S"        # deal with 'value' and 'validation'"
p271
sI850
S''
sI851
S"        name = self['_name']"
p272
sI852
S'        if newstatus:'
p273
sI853
S'            newstatus = self._validate()'
p274
sI854
S'            self._postprocessing()'
p275
sI855
S"        elif 'old_value' in self.attributes:"
p276
sI856
S"            self['value'] = self['old_value']"
p277
sI857
S'            self._postprocessing()'
p278
ssg83
S'(self=<gluon.html.INPUT object>, status=True, hideerror=False)'
p279
sg85
g203
sa(dp280
g62
S'/home/jbtte/web2py/gluon/html.py'
p281
sg64
(dp282
S'errors'
p283
g106
sS'value'
p284
S"' Duas Medidas '"
p285
sS'validator'
p286
S'<gluon.validators.IS_NOT_IN_DB object>'
p287
ssg70
I1759
sg71
(dp288
I1760
S'                if not errors is None:'
p289
sI1761
S'                    self.vars[name] = value'
p290
sI1762
S'                    self.errors[name] = errors'
p291
sI1763
S'                    break'
p292
sI1754
S"        requires = self['requires']"
p293
sI1755
S'        if requires:'
p294
sI1756
S'            if not isinstance(requires, (list, tuple)):'
p295
sI1757
S'                requires = [requires]'
p296
sI1758
S'            for validator in requires:'
p297
sI1759
S'                (value, errors) = validator(value)'
p298
ssg83
S'(self=<gluon.html.INPUT object>)'
p299
sg85
S'_validate'
p300
sa(dp301
g62
S'/home/jbtte/web2py/gluon/validators.py'
p302
sg64
(dp303
S'self.dbset'
p304
S'<Table music (id,user,musica,banda,url,created_on,editado)>'
p305
sS'table'
p306
g106
sS'self'
p307
S'<gluon.validators.IS_NOT_IN_DB object>'
p308
sS'self.dbset.db'
p309
g106
sS'tablename'
p310
S"'music'"
p311
ssg70
I651
sg71
(dp312
I646
S'        if not value.strip():'
p313
sI647
S'            return (value, translate(self.error_message))'
p314
sI648
S'        if value in self.allowed_override:'
p315
sI649
S'            return (value, None)'
p316
sI650
S"        (tablename, fieldname) = str(self.field).split('.')"
p317
sI651
S'        table = self.dbset.db[tablename]'
p318
sI652
S'        field = table[fieldname]'
p319
sI653
S'        subset = self.dbset(field == value,'
p320
sI654
S'                            ignore_common_filters=self.ignore_common_filters)'
p321
sI655
S'        id = self.record_id'
p322
ssg83
S"(self=<gluon.validators.IS_NOT_IN_DB object>, value=' Duas Medidas ')"
p323
sg85
S'__call__'
p324
sa(dp325
g62
S'/home/jbtte/web2py/gluon/dal.py'
p326
sg64
(dp327
S'builtinstr'
p328
S"<type 'str'>"
p329
sS'self'
p330
S'<Table music (id,user,musica,banda,url,created_on,editado)>'
p331
sS'global ogetattr'
p332
S"<slot wrapper '__getattribute__' of 'object' objects>"
p333
sS'key'
p334
S"'db'"
p335
ssg70
I8414
sg71
(dp336
I8416
S'    def __call__(self, key=DEFAULT, **kwargs):'
p337
sI8417
S"        for_update = kwargs.get('_for_update',False)"
p338
sI8418
S"        if '_for_update' in kwargs: del kwargs['_for_update']"
p339
sI8409
S'                return rows[0]'
p340
sI8410
S'            return None'
p341
sI8411
S"        elif str(key).isdigit() or 'google' in DRIVERS and isinstance(key, Key):"
p342
sI8412
S'            return self._db(self._id == key).select(limitby=(0,1), orderby_on_limitby=False).first()'
p343
sI8413
S'        elif key:'
p344
sI8414
S'            return ogetattr(self, str(key))'
p345
sI8415
S''
ssg83
S"(self=<Table music (id,user,musica,banda,url,created_on,editado)>, key='db')"
p346
sg85
g20
sasS'pyver'
p347
S'Python 2.7.4: /usr/local/bin/uwsgi (prefix: /usr)'
p348
sS'session'
p349
g57
(S's5\x10\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">auth</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">expiration</td><td valign="top">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">hmac_key</td><td valign="top">:</td><td><div>e62fd9f9-0402-4a96-b26c-02cc39b8079b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_visit</td><td valign="top">:</td><td><div>datetime.datetime(2013, 10, 5, 19, 19, 59, 442968)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remember</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">email</td><td valign="top">:</td><td><div>jbaumotte@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">first_name</td><td valign="top">:</td><td><div>Joao</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">id</td><td valign="top">:</td><td><div>1L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_name</td><td valign="top">:</td><td><div>Baumotte</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">registration_id</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">registration_key</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">reset_password_key</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">username</td><td valign="top">:</td><td><div>jopa</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user_groups</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">1</td><td valign="top">:</td><td><div>user_1</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">banda</td><td valign="top">:</td><td><div> Banda Eva</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_orderby</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_query</td><td valign="top">:</td><td><div>db.music.id&gt;0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">letra</td><td valign="top">:</td><td><div>Tom: D\r\n\t\t\nA9               D9        A9    D9\nVou levar duas medidas na balan\xc3\xa7a\nA9               D9        F#m\nCaminhar entre avenidas do amor\n   D                  Bm\nVertentes que caem do c\xc3\xa9u\n  D                   Bm\nColares que tran\xc3\xa7am a flor\n   D9                 Bm        G   E4 E\nVerdades que doem no peito a raz\xc3\xa3o\n\nA9                 D9            A9    D9\nBom te ver doces momentos nessa estrada\nA9             D9          F#m\nBeira mar, acostamento j\xc3\xa1 se foi\n   D                    Bm\nPresentes que joguei no mar\n   D                Bm\nAs flores que l\xc3\xa1 deixei\n D              Bm                 G\nAinda me lembro como fosse hoje o adeus\n\n   E4 E\nVoltei\n\n   A                D\nS\xc3\xb3 vou querer ter voc\xc3\xaa aqui\n  C#7/4 C#7          F#m\nSorrindo te dar meu amor assim\n  D                  Bm                   G  E4 E\n\xc3\x89 claro que a vida ensina a gente a ser feliz\n  A                 D\nE vou te amar louco de paix\xc3\xa3o\n  C#7/4 C#7          F#m\nSe ainda me quer cheia de prazer\n   D                       Bm               G   E4 E\nEu sou um barco a vela e voc\xc3\xaa \xc3\xa9 o vento que leva\n        A\nMeu cora\xc3\xa7\xc3\xa3o</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">name</td><td valign="top">:</td><td><div> Duas Medidas </div></td></tr><tr><td style="font-weight:bold;vertical-align:top">nome_musica</td><td valign="top">:</td><td><div>Duas_Medidas</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>http://www.cifraclub.com.br/banda-eva/duas-medidas/</div></td></tr></table></div>'
tRp350
sS'etype'
p351
S"<type 'exceptions.AttributeError'>"
p352
sS'date'
p353
S'Sat Oct  5 19:25:26 2013'
p354
sS'response'
p355
g57
(S's\xf3\x17\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0x45878b8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_cifras</td><td valign="top">:</td><td><div>187.65.152.56-5f96ed88-9070-4f5b-b37a-89920c0058d6<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">delimiters</td><td valign="top">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">files</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generic_patterns</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">google_analytics_id</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">headers</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">X-Powered-By</td><td valign="top">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">menu</td><td valign="top">:</td><td><div><table><tr><td><div><table><tr><td><div>design</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/Cifras</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>bd</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/Cifras/appadmin/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>estado</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/Cifras/appadmin/state</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>cache</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/Cifras/appadmin/ccache</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">meta</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">author</td><td valign="top">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">description</td><td valign="top">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generator</td><td valign="top">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">keywords</td><td valign="top">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">models_to_run</td><td valign="top">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/update/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">postprocessing</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_cookie_expires</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_data_name</td><td valign="top">:</td><td><div>session_data_cifras</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_file</td><td valign="top">:</td><td><div>&lt;open file &#x27;/home/jbtte/web2py/applications/Cifras/sessions/187.65.152.56-5f96ed88-9070-4f5b-b37a-89920c0058d6&#x27;, mode &#x27;rb+&#x27; at 0x4741270&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_filename</td><td valign="top">:</td><td><div>/home/jbtte/web2py/applications/Cifras/sessions/187.65.152.56-5f96ed88-9070-4f5b-b37a-89920c0058d6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id</td><td valign="top">:</td><td><div>187.65.152.56-5f96ed88-9070-4f5b-b37a-89920c0058d6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_name</td><td valign="top">:</td><td><div>session_id_cifras</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_locked</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_new</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_storage_type</td><td valign="top">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">status</td><td valign="top">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">subtitle</td><td valign="top">:</td><td><div>Database Administration (appadmin)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">title</td><td valign="top">:</td><td><div>Cifras</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">view</td><td valign="top">:</td><td><div>appadmin.html</div></td></tr></table></div>'
tRp356
sS'locals'
p357
(dp358
S'self'
p359
S'<Table music (id,user,musica,banda,url,created_on,editado)>'
p360
sS'key'
p361
S"'db'"
p362
sssS'traceback'
p363
S'Traceback (most recent call last):\n  File "/home/jbtte/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/jbtte/web2py/applications/Cifras/controllers/appadmin.py", line 615, in <module>\n  File "/home/jbtte/web2py/gluon/globals.py", line 194, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/jbtte/web2py/applications/Cifras/controllers/appadmin.py", line 315, in update\n    if form.accepts(request.vars, session):\n  File "/home/jbtte/web2py/gluon/sqlhtml.py", line 1370, in accepts\n    **kwargs\n  File "/home/jbtte/web2py/gluon/html.py", line 2010, in accepts\n    status = self._traverse(status, hideerror)\n  File "/home/jbtte/web2py/gluon/html.py", line 846, in _traverse\n    newstatus = c._traverse(status, hideerror) and newstatus\n  File "/home/jbtte/web2py/gluon/html.py", line 846, in _traverse\n    newstatus = c._traverse(status, hideerror) and newstatus\n  File "/home/jbtte/web2py/gluon/html.py", line 846, in _traverse\n    newstatus = c._traverse(status, hideerror) and newstatus\n  File "/home/jbtte/web2py/gluon/html.py", line 846, in _traverse\n    newstatus = c._traverse(status, hideerror) and newstatus\n  File "/home/jbtte/web2py/gluon/html.py", line 853, in _traverse\n    newstatus = self._validate()\n  File "/home/jbtte/web2py/gluon/html.py", line 1759, in _validate\n    (value, errors) = validator(value)\n  File "/home/jbtte/web2py/gluon/validators.py", line 651, in __call__\n    table = self.dbset.db[tablename]\n  File "/home/jbtte/web2py/gluon/dal.py", line 8414, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'db\'\n'
p364
s.